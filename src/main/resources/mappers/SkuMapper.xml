<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lxg.springboot.mapper.SkuMapper">

	
	<select id="queryall" resultType="com.lxg.springboot.model.Sku" >
		select * from sku where storeid=#{storeid}
	</select>
	
	<select id="delete" parameterType="com.lxg.springboot.model.Sku" >
		delete from sku where storeid=#{storeid}
	</select>
	
	<select id="deletedown" parameterType="com.lxg.springboot.model.Sku" >
		delete from skudown where storeid=#{storeid}
	</select>
	
	<select id="inserthistory" parameterType="com.lxg.springboot.model.Sku">
		insert into skuhistory(name,specifi,code,amount,price,storeid,total,skuamount,tag)
		values (#{name},#{specifi},#{code},#{amount},#{price},#{storeid},#{total},#{skuamount},#{tag})
	</select>
	
	<select id="insert" parameterType="com.lxg.springboot.model.Sku">
		insert into sku(name,specifi,code,amount,price,storeid,total,skuamount,tag)
		values (#{name},#{specifi},#{code},#{amount},#{price},#{storeid},#{total},#{skuamount},#{tag})
	</select>
	
	<select id="insertdown" parameterType="com.lxg.springboot.model.Sku">
		insert into skudown(name,specifi,code,amount,price,storeid,total,skuamount,tag)
		values (#{name},#{specifi},#{code},#{amount},#{price},#{storeid},#{total},#{skuamount},#{tag})
	</select>
	
	<select id="queryalldown" resultType="com.lxg.springboot.model.Sku" >
		select * from skudown where storeid=#{storeid}
	</select>
	
	<select id="query" parameterType="com.lxg.springboot.model.Sku"  resultType="com.lxg.springboot.model.Sku">
		select * from sku where code=#{code} and storeid=#{storeid};
	</select>
	
	<select id="querybyCode" parameterType="com.lxg.springboot.model.Sku"  resultType="com.lxg.springboot.model.Sku">
		select * from sku where code=#{code} and storeid=#{storeid};
	</select>
	
	<select id="update" parameterType="com.lxg.springboot.model.Sku"   resultType="com.lxg.springboot.model.Sku">
		update sku set tag=#{tag} where code=#{code} and storeid=#{storeid};
	</select>
	
	<select id="updatedown" parameterType="com.lxg.springboot.model.Sku"   resultType="com.lxg.springboot.model.Sku">
		update skudown set tag=#{tag} where code=#{code} and storeid=#{storeid};
	</select>
	
	<select id="comment" parameterType="com.lxg.springboot.model.Sku" resultType="com.lxg.springboot.model.Intea">
		select num from comnum where code=#{code} and storeid=#{storeid};
	</select>
	
	<select id="count" parameterType="com.lxg.springboot.model.Sku" resultType="com.lxg.springboot.model.Intea">
		select sum(amount) as num from cart where code=#{code} and storeid=#{storeid};
	</select>
	
	
	<select id="queryorder" parameterType="com.lxg.springboot.model.Order" resultType="com.lxg.springboot.model.OrderAll">
		SELECT orders.time,orders.orderNo,ordergood.`code`,ordergood.amount,ordergood.price,orders.state from ordergood JOIN orders where orders.orderNo = ordergood.orderNo and state='1' and orders.storeid=#{storeid}
		<if test="startDate != null and startDate != ''">
    	and orders.time &gt;= #{startDate}
    	</if> 
    	<if test="endDate != null and endDate != ''">
    	and orders.time &lt;= #{endDate}
    	</if>
	</select>
	
	<select id="queryorderid" parameterType="com.lxg.springboot.model.Order" resultType="int">
		SELECT sum(fee*100) from orders where state='1' and storeid=#{storeid}
		<if test="startDate != null and startDate != ''">
    	and time &gt;= #{startDate}
    	</if> 
    	<if test="endDate != null and endDate != ''">
    	and time &lt;= #{endDate}
    	</if>
	</select>
	
	
	<select id="allmoney" parameterType="com.lxg.springboot.model.Order" resultType="int">
	SELECT sum(fee*100) from  orders where state='1' and orders.storeid=#{storeid}
		<if test="startDate != null and startDate != ''">
    	and orders.time &gt;= #{startDate}
    	</if> 
    	<if test="endDate != null and endDate != ''">
    	and orders.time &lt;= #{endDate}
    	</if>
	</select>
	
	<select id="increaseall" parameterType="com.lxg.springboot.model.IncreaseMoney" resultType="com.lxg.springboot.model.IncreaseMoney">
		SELECT finalincrease,storeid,storename from(SELECT * from (SELECT round((thisweek/lastweek*100 -100),2) as finalincrease,storeid1 as storeid  from (SELECT sum(fee*100) as thisweek,storeid as storeid1 from  orders where state='1'
	  	   <if test="startDate1 != null and startDate1 != ''">
    		and time &gt;= #{startDate1}
    		</if> 
    		<if test="endDate1 != null and endDate1 != ''">
    		and time &lt;= #{endDate1}
    		</if>
		GROUP BY storeid) as temp1 join (
		(SELECT sum(fee*100) as lastweek,storeid as storeid2 from  orders where state='1'
	    	<if test="startDate2 != null and startDate2 != ''">
	    	and time &gt;= #{startDate2}
	    	</if> 
	    	<if test="endDate2 != null and endDate2 != ''">
	    	and time &lt;= #{endDate2}
	    	</if>
		GROUP BY storeid) as temp2 )where temp1.storeid1=temp2.storeid2	) as temp3 JOIN apply where temp3.storeid = apply.id) as temp4
	</select>
	
	<select id="increasebyuser" parameterType="com.lxg.springboot.model.IncreaseMoney" resultType="com.lxg.springboot.model.IncreaseMoney">
		SELECT finalincrease,storeid,storename from(SELECT * from (SELECT round((thisweek/lastweek*100 -100),2) as finalincrease,storeid1 as storeid  from (SELECT sum(fee*100) as thisweek,storeid as storeid1 from  orders where state='1'
	    	<if test="startDate1 != null and startDate1 != ''">
    		and time &gt;= #{startDate1}
    		</if> 
    		<if test="endDate1 != null and endDate1 != ''">
    		and time &lt;= #{endDate1}
    		</if>
		GROUP BY storeid) as temp1 join (
		(SELECT sum(fee*100) as lastweek,storeid as storeid2 from  orders where state='1'
	    	<if test="startDate2 != null and startDate2 != ''">
	    	and time &gt;= #{startDate2}
	    	</if> 
	    	<if test="endDate2 != null and endDate2 != ''">
	    	and time &lt;= #{endDate2}
	    	</if>
		GROUP BY storeid) as temp2 )where temp1.storeid1=temp2.storeid2	) as temp3 JOIN apply where temp3.storeid = apply.id) as temp4 where field= #{openid} or deal= #{openid} or supply= #{openid}
	</select>
	
	<select id="increasenum" parameterType="com.lxg.springboot.model.IncreaseMoney" resultType="int">
		SELECT count(*)  from (SELECT sum(fee*100) as thisweek,storeid as storeid1 from  orders where state='1'
	    	<if test="startDate1 != null and startDate1 != ''">
    		and time &gt;= #{startDate1}
    		</if> 
    		<if test="endDate1 != null and endDate1 != ''">
    		and time &lt;= #{endDate1}
    		</if>
		GROUP BY storeid) as temp1 join (
		(SELECT sum(fee*100) as lastweek,storeid as storeid2 from  orders where state='1'
	    	<if test="startDate2 != null and startDate2 != ''">
	    	and time &gt;= #{startDate2}
	    	</if> 
	    	<if test="endDate2 != null and endDate2 != ''">
	    	and time &lt;= #{endDate2}
	    	</if>
		GROUP BY storeid) as temp2 )where temp1.storeid1=temp2.storeid2		
	</select>
	
	<select id="increasebyusernum" parameterType="com.lxg.springboot.model.IncreaseMoney" resultType="int">
		SELECT count(storeid) from(SELECT * from (SELECT round((thisweek/lastweek*100 -100),2) as finalincrease,storeid1 as storeid  from (SELECT sum(fee*100) as thisweek,storeid as storeid1 from  orders where state='1'
	    	<if test="startDate1 != null and startDate1 != ''">
    		and time &gt;= #{startDate1}
    		</if> 
    		<if test="endDate1 != null and endDate1 != ''">
    		and time &lt;= #{endDate1}
    		</if>
		GROUP BY storeid) as temp1 join (
		(SELECT sum(fee*100) as lastweek,storeid as storeid2 from  orders where state='1'
	    	<if test="startDate2 != null and startDate2 != ''">
	    	and time &gt;= #{startDate2}
	    	</if> 
	    	<if test="endDate2 != null and endDate2 != ''">
	    	and time &lt;= #{endDate2}
	    	</if>
		GROUP BY storeid) as temp2 )where temp1.storeid1=temp2.storeid2	) as temp3 JOIN apply where temp3.storeid = apply.id) as temp4 where field= #{openid} or deal= #{openid} or supply= #{openid}
	</select>
		
		
</mapper>  